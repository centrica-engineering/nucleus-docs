---
const { name } = Astro.props;
import cem from "@connectedhomes/nucleus/custom-elements.json";
import jsdoc from "@connectedhomes/nucleus/ce-doc.json";

const compDetails = cem.tags.find((tag) => tag.name === name);
const jsdocDetails = jsdoc.find((tag) => tag.name === name);

const attributes = compDetails?.attributes;
const properties = compDetails?.properties;
const slots = jsdocDetails?.slots;
const events = compDetails?.events;
---

{ 
  properties?.length > 0 &&  (
    <h4 id="properties">Properties</h4>
    <div class="spec-list">
      {
        properties?.map((property) => {
          if (['slottedStyles'].includes(property.name)) {
            return undefined;
          }
          return (
            <p class="property-title"><code>{property.name}</code></p>
            <dl>
              <div>
                <dt>Attribute</dt>
                <dd><code>{property.attribute}</code></dd>
              </div>
              <div>
                <dt>Description</dt>
                <dd>{property.description ?? ''}</dd>
              </div>
              <div>
                <dt>Type</dt>
                <dd>
                  <code>{property.type?.replaceAll('"', ' ')}</code>
                </dd>
              </div>
              {
                property.default && (
                  <div>
                    <dt>Default</dt>
                    <dd><code>{property.default}</code></dd>
                  </div>
                )
              }
            </dl>
          );
        })
      }
    </div>
  )
}

{
  slots?.length > 0 && (
    <h4 id="slots">Slots</h4>
    <table>
      <thead>
        <tr>
          <th>Slot</th>
          <th>Permitted tags</th>
          <th>Description</th>
        </tr>
      </thead>
      <tbody>
        {
          slots?.map((slot) => {
            return (
              <tr>
                <td>{slot.name ? <code>{slot.name}</code> : 'anonymous' }</td>
                <td>
                  {slot.permittedTagNames?.map((tag) => <span><code>&lt;{tag}&gt;</code>  </span>)}
                </td>
                <td>{slot.description}</td>
              </tr>
            );
          })
        }
      </tbody>
    </table>
  )
}

{
  events?.length > 0 && (
    <h4 id="events">Events</h4>
    <table>
      <thead>
        <tr>
          <th>Name</th>
          <th>Description</th>
        </tr>
      </thead>
      <tbody>
        {
          events?.map((event) => {
            return (
              <tr>
                <td><code>{event.name}</code></td>
                <td>{event.description}</td>
              </tr>
            );
          })
        }
      </tbody>
    </table>
  )
}
