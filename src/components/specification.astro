---
const { name } = Astro.props;
import cem from "@connectedhomes/nucleus/custom-elements.json";
import jsdoc from "@connectedhomes/nucleus/ce-doc.json";

const compDetails = cem.tags.find((tag) => tag.name === name);
const jsdocDetails = jsdoc.find((tag) => tag.name === name);

const attributes = compDetails?.attributes;
const properties = compDetails?.properties;
const slots = jsdocDetails?.slots;
const events = compDetails?.events;
---
<style>
.spec {
  td {
    border-bottom-width: 0;
    border-left-width: 0;
    border-right-width: 0;
  }

  th {
    border-top-width: 0;
    border-left-width: 0;
    border-right-width: 0;
    border-bottom-width: 2px;
  }
}
</style>
  
{
  properties?.length > 0 && (
    <h4 id="attributes">Attributes</h4>
    <table class="spec">
      <thead>
        <tr>
          <th>Attribute</th>
          <th>Property</th>
          <th>Type</th>
          <th>Default</th>
          <th>Description</th>
        </tr>
      </thead>
      <tbody>
        {
          properties?.map((property) => {
            if (!property.attribute || ['slottedStyles'].includes(property.name)) {
              return undefined;
            }
            const defaultValue = property.default?.replaceAll('"', '');
            return (
              <tr>
                <td><code>{property.attribute}</code></td>
                <td><code>{property.name}</code></td>
                <td>{property.type?.split('|')?.map((type) => <span><code>{type.replaceAll('"','')}</code>&#32;</span>)}</td>
                <td>{ defaultValue ? <code>{defaultValue}</code> : ''}</td>
                <td>{property.description}</td>
              </tr>
            );
          })
        }
      </tbody>
    </table>
  )
}

{
  slots?.length > 0 && (
    <h4 id="slots">Slots</h4>
    <div class="spec-list">
      {
        slots?.map((slot) => {
          return (
            <dl>
              <p>{slot.name ? <code>{slot.name}</code> : <span>Anonymous slot</span> }</p>
              <div>
                <dt>Permitted tags</dt>
                <dd>{slot.permittedTagNames?.map((tag) => <span><code>&lt;{tag}&gt;</code>&#32;</span>)}</dd>
              </div>
              <div>
                <dt>Description</dt>
                <dd>{slot.description}</dd>
              </div>
            </dl>
          );
        })
      }
    </div>
  )
}

{
  events?.length > 0 && (
    <h4 id="events">Events</h4>
    <div class="spec-list">
      {
        events?.map((event) => {
          return (
            <dl>
              <p><code>{event.name}</code></p>
              <div>
                <dt>Description</dt>
                <dd>{event.description}</dd>
              </div>
            </dl>
          );
        })
      }
    </div>
  )
}
